theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas)
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
significativos = 0
value <- rbinom(n, m, alpha)
count = 0
for (i in value){
if (i > 0){
count = count + 1
}
}
prob = count/n # Probailidad
return(prob)
}
m = c(1:25) # Variamos m de 1 a 25
alpha = 0.05
list_empirico = c()
list_real = c()
list_empirico_Bonfe = c()
list_real_Bonfe = c()
for(value in m){
list_empirico =  c(list_empirico, probEmpirica(alpha, value))
list_real = c(list_real, 1 - (1 - alpha)^value)
list_empirico_Bonfe =  c(list_empirico_Bonfe, probEmpirica(alpha/value, value))
list_real_Bonfe = c(list_real_Bonfe, 1 - (1 - alpha/value)^value)
}
df = data.frame(
empirico = list_empirico,
real = list_real,
empirico_Bonfe = list_empirico_Bonfe,
real_Bonfe = list_real_Bonfe
)
# Graficar con ggplot2
ggplot(df, aes(x = 1:length(m))) +
#geom_line(aes(y = empirico, color = "Empírica"), size = 1) +
#geom_line(aes(y = real, color = "Real"), size = 1) +
geom_line(aes(y = empirico_Bonfe, color = "Empírica Bonfe"), size = 1) +
geom_line(aes(y = real_Bonfe, color = "Real Bonfe"), size = 1) +
labs(x = "m", y = "Probabilidad", color = "Leyenda") +
ggtitle("Comparación de Probabilidad Empírica vs. Real") +
scale_color_manual(values = c("Empírica" = "blue", "Real" = "red", "Empírica Bonfe" = "green", "Real Bonfe" = "purple")) +
theme_minimal()
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
theme(legend.position = c(1, 1), legend.justification = c(1, 1))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("0.05" = "red", "0.01" = "blue"),
name = "Metodos",
labels = c("0.01", "0.05"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("0.05" = "red", "0.01" = "blue"),
name = "Valor de alpha",
labels = c("0.01", "0.05"))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni), color = "blue", linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni), color = "red", linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("0.05" = "red", "0.01" = "blue"),
name = "Valor de alpha",
labels = c("0.01", "0.05"))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas, Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferri"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferri"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferri" = "blue", "Empírica Bonferri" = "red"),
name = "Metodos",
labels = c("Teórica Bonferri", "Empírica Bonferri"))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos",
labels = c( "Empírica Bonferroni","Teórica Bonferroni"))
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad",color = "Leyenda") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos",
)
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad",color = "Leyenda") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos")
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos",
labels = c("Teórica", "Empírica"))
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos")
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad, pueden cambiar este valor si lo desean
# Resultados de los experimentos
res <- matrix(rbinom(n * m, size = 1, prob = alpha), nrow = n, ncol = m)
resultados_significativos <- apply(res, 1, function(x) any(x == 1))
# Probabilidad empírica
prob <- sum(resultados_significativos) / n
return(prob)
}
alpha <- 0.05
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos")
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos")
alpha <- 0.01
m_values <- 1:50
# Calcula y almacena las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
# Crea un data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos")
# Gráfico con ggplot2
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos")
probEmpirica <- function(alpha,m){
n <- 10000 # Cantidad de veces que se va a repetir el experimento para estimar la probabilidad
significativos = 0
value <- rbinom(n, m, alpha)
count = 0
for (i in value){
if (i > 0){
count = count + 1
}
}
prob = count/n # Probailidad
return(prob)
}
m = c(1:25) # Variamos m de 1 a 25
alpha = 0.05
list_empirico = c()
list_real = c()
list_empirico_Bonfe = c()
list_real_Bonfe = c()
for(value in m){
list_empirico =  c(list_empirico, probEmpirica(alpha, value))
list_real = c(list_real, 1 - (1 - alpha)^value)
list_empirico_Bonfe =  c(list_empirico_Bonfe, probEmpirica(alpha/value, value))
list_real_Bonfe = c(list_real_Bonfe, 1 - (1 - alpha/value)^value)
}
df = data.frame(
empirico = list_empirico,
real = list_real,
empirico_Bonfe = list_empirico_Bonfe,
real_Bonfe = list_real_Bonfe
)
# Graficar con ggplot2
ggplot(df, aes(x = 1:length(m))) +
geom_line(aes(y = empirico, color = "Empírica"), size = 1) +
geom_line(aes(y = real, color = "Real"), size = 1) +
geom_line(aes(y = empirico_Bonfe, color = "Empírica Bonfe"), size = 1) +
geom_line(aes(y = real_Bonfe, color = "Real Bonfe"), size = 1) +
labs(x = "m", y = "Probabilidad", color = "Leyenda") +
ggtitle("Comparación de Probabilidad Empírica vs. Real") +
scale_color_manual(values = c("Empírica" = "blue", "Real" = "red", "Empírica Bonfe" = "green", "Real Bonfe" = "purple")) +
theme_minimal()
alpha <- 0.1
m_values <- 1:50
# Calcular y almacenar las probabilidades empíricas para diferentes valores de m
probabilidades_empiricas <- sapply(m_values, function(m) probEmpirica(alpha, m))
probabilidades_bonferroni <- sapply(m_values, function(m) probEmpirica(alpha/m, m))
#Data frame con los resultados
data <- data.frame(m_values, Probabilidad_real = 1 - (1 - alpha)^m_values, Empirica = probabilidades_empiricas,
Probabilidad_real_bonferroni = 1 - (1 - alpha/m_values)^m_values, Empirica_bonferroni = probabilidades_bonferroni )
# Gráficos
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real, color = "Teórica"), linetype = "solid") +
geom_line(aes(y = Empirica, color = "Empírica"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica" = "blue", "Empírica" = "red"),
name = "Metodos")
ggplot(data, aes(x = m_values)) +
geom_line(aes(y = Probabilidad_real_bonferroni, color = "Teórica Bonferroni"), linetype = "solid") +
geom_line(aes(y = Empirica_bonferroni, color = "Empírica Bonferroni"), linetype = "solid") +
labs(x = "Número de experimentos (m)", y = "Probabilidad") +
theme_minimal() +
scale_color_manual(values = c("Teórica Bonferroni" = "blue", "Empírica Bonferroni" = "red"),
name = "Metodos")
data <- read.csv("ratones.csv",sep= ";", stringsAsFactors = T)
head(data)
