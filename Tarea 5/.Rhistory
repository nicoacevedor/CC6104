# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
df <- read.csv("table_height.csv")
df <- df[df$age >= 6,]
df$weight <- log(df$weight)
hist(df$weight)
print(paste("weight mean: ", mean(df$weight)))
print(paste("weight sd: ", sd(df$weight)))
bay.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(125, 16),
b1 ~ dnorm(25, 10),
sigma ~ dunif(0, 16)), data=df
)
# samples from the posterior
post <- extract.samples(bay.reg, n= 1e4)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
df <- read.csv("table_height.csv")
df <- df[df$age >= 6,]
df$weight <- log(df$weight)
hist(df$weight)
print(paste("weight mean: ", mean(df$weight)))
print(paste("weight sd: ", sd(df$weight)))
bay.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(125, 16),
b1 ~ dnorm(25, 10),
sigma ~ dunif(0, 16)), data=df
)
# samples from the posterior
post <- extract.samples(bay.reg, n= 1e4)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
df <- read.csv("table_height.csv")
df <- df[df$age >= 6,]
print('Mean')
print(mean(df$height))
print('Standar dev')
print(sd(df$height))
df$weight <- log(df$weight)
hist(df$weight)
print(paste("weight mean: ", mean(df$weight)))
print(paste("weight sd: ", sd(df$weight)))
bay.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(125, 16),
b1 ~ dnorm(25, 10),
sigma ~ dunif(0, 16)), data=df
)
# samples from the posterior
post <- extract.samples(bay.reg, n= 1e4)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
df <- read.csv("table_height.csv")
df <- df[df$age >= 6,]
print('Mean')
print(mean(df$height))
print('Standar dev')
print(sd(df$height))
df$weight <- log(df$weight)
hist(df$weight)
print(paste("weight mean: ", mean(df$weight)))
print(paste("weight sd: ", sd(df$weight)))
bay.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(125, 16),
b1 ~ dnorm(25, 10),
sigma ~ dunif(0, 16)), data=df
)
# samples from the posterior
post <- extract.samples(bay.reg, n= 1e4)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(0, 1),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
library(dagitty)
dag <- dagitty("dag {
Clima -> Ejercicio
Ejercicio -> Energia
Clima -> Estado_de_Animo
Productividad -> Estado_de_Animo
Productividad -> Energia
}")
# Visualización del DAG
plot(dag)
# Cargamos los datos
data <- read.csv("table_height.csv")
hist(data$age)
hist(data$height)
hist(data$weight)
#para la creacion de los priors, encontraremos hacia donde se aproxima la altura
print('Mean')
print(mean(data$height)) #media para el b0
print('Standard deviation')
print(sd(data$height)) #desviacion estandar para el b0
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(0, 1),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
# Ajustamos el modelo con Laplace approximation
precis(model, prob = 0.95)
# Extraemos los parámetros del modelo
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=4 , to=50 , by=1 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
data$weight <- log(data$weight)
hist(data$weight)
#para la creacion de los priors
print('Mean')
print(mean(data$weight)) #media para el b0
print('Standard deviation')
print(sd(data$weight)) #desviacion estandar para el b0
df <- read.csv("table_height.csv")
df <- df[df$age >= 6,]
print('Mean')
print(mean(df$height))
print('Standar dev')
print(sd(df$height))
df$weight <- log(df$weight)
hist(df$weight)
print(paste("weight mean: ", mean(df$weight)))
print(paste("weight sd: ", sd(df$weight)))
bay.reg <- quap(
alist(height ~ dnorm(mu, sigma),
mu <- b0 + b1*weight,
b0 ~ dnorm(125, 16),
b1 ~ dnorm(25, 10),
sigma ~ dunif(0, 16)), data=df
)
# samples from the posterior
post <- extract.samples(bay.reg, n= 1e4)
# define sequence of weights to compute predictions for
# these values will be on the horizontal axis
weight.seq <- seq(from=1 , to=log(50) , by= 0.4 )
mu <- link(bay.reg ,data=data.frame(weight=weight.seq), n=1e4 )
mu.mean <- apply( mu , 2 , mean )
mu.HPDI <- apply( mu , 2 , HPDI , prob=0.95 )
# Predictor Intervals using the Posterior Predictive Distribution
#Let's simulate heights not average heights
height.weight <- function(weight)
rnorm(
n=nrow(post) ,
mean=post$b0 + post$b1*weight ,
sd=post$sigma )
sim.height <- sapply( weight.seq , height.weight)
#or alternatively
#sim.height <- sim( b.reg1 ,n=1e4, data=list(weight=weight.seq) )
height.HPDI <- apply(sim.height, 2, HPDI, prob=0.95)
# plot raw data
plot(height ~ weight, df, col=col.alpha(rangi2,0.5))
# draw MAP line
lines(weight.seq , mu.mean )
# draw HPDI region for line
shade(mu.HPDI ,weight.seq )
# draw HPDI region for simulated heights
shade(height.HPDI ,weight.seq )
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(0, 1),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0,4 )
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(0, 1),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0.4 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(25, 10),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0.4 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(20, 5),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0.4 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(20, 20),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0.4 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
# Definimos el modelo de regresión bayesiana con priors
model <- quap(
alist(
height ~ dnorm(mu, sigma),  # Likelihood
mu <- b0 + b1 * weight,       # Modelo lineal
b0 ~ dnorm(108, 25),         # Prior para intercepto
b1 ~ dnorm(20, 10),           # Prior para pendiente
sigma ~ dunif(0, 25)        # Prior para desviación estándar
),
data = data
)
posterior_samples <- extract.samples(model)
weight.seq <- seq(from=0.6 , to=log(50) , by=0.4 )
# MAP
map <- link(model, data = list(weight = weight.seq))
# Simulamos alturas no promedio
height.weight <- function(weight) {
rnorm(
n = nrow(posterior_samples),
mean = posterior_samples$b0 + posterior_samples$b1 * weight,
sd = posterior_samples$sigma
)
}
simulated_heights <- sapply(weight.seq, height.weight)
# Calculamos intervalos de HPDI
height.HPDI <- apply(simulated_heights, 2, HPDI, prob = 0.95)
# Plot de los datos crudos
plot(data$weight, data$height, col = rgb(0, 0, 0, 0.5), xlab = "Weight", ylab = "Height")
# Dibujamos la línea MAP
lines(weight.seq, apply(map, 2, mean), col = "blue", lwd = 2)
# Dibujamos el intervalo HPDI para la línea
shade(apply(map, 2, HPDI, prob = 0.95), weight.seq, col = rgb(0, 0, 1, 0.2))
# Dibujamos el intervalo HPDI para alturas simuladas
shade(height.HPDI, weight.seq, col = rgb(1, 0, 0, 0.2))
# Añadimos detalles al gráfico
legend("topright", legend = c("MAP Line", "HPDI", "HPDI Simulated Heights"),
col = c("blue", rgb(0, 0, 1, 0.2), rgb(1, 0, 0, 0.2)), lwd = c(2, 0, 0), pch = c(NA, NA, NA))
